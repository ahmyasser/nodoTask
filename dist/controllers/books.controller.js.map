{"version":3,"sources":["../../src/controllers/books.controller.ts"],"sourcesContent":["import { NextFunction, Request, Response } from 'express';\nimport { CreateBookDto, UpdateBookReviewDto } from '@dtos/books.dto';\nimport { Book } from '@interfaces/books.interface';\nimport bookService from '@services/books.service';\n\nclass BooksController {\n  public bookService = new bookService();\n\n  public getBooks = async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const findAllBooksData: Book[] = await this.bookService.findAllBook();\n\n      res.status(200).json({ data: findAllBooksData, message: 'findAll' });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public getBookById = async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const bookId: string = req.params.id;\n      const findOneBookData: Book = await this.bookService.findBookById(bookId);\n\n      res.status(200).json({ data: findOneBookData, message: 'findOne' });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public createBook = async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const bookData: CreateBookDto = req.body;\n      const createBookData: Book = await this.bookService.createBook(bookData);\n      res.status(201).json({ data: createBookData, message: 'created' });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public updateBook = async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const bookId: string = req.params.id;\n      const bookData: CreateBookDto = req.body;\n      const updateBookData: Book = await this.bookService.updateBook(bookId, bookData);\n\n      res.status(200).json({ data: updateBookData, message: 'updated' });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public addBookReview = async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const bookId: string = req.params.id;\n      const reviewData: UpdateBookReviewDto = req.body;\n      reviewData.user = (req as any).user;\n      const updateBookData: Book = await this.bookService.updateBookReview(bookId, reviewData);\n\n      res.status(200).json({ data: updateBookData, message: 'updated' });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public deleteBook = async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const bookId: string = req.params.id;\n      const deleteBookData: Book = await this.bookService.deleteBook(bookId);\n\n      res.status(200).json({ data: deleteBookData, message: 'deleted' });\n    } catch (error) {\n      next(error);\n    }\n  };\n}\n\nexport default BooksController;\n"],"names":["BooksController","bookService","getBooks","req","res","next","findAllBooksData","findAllBook","status","json","data","message","error","getBookById","bookId","params","id","findOneBookData","findBookById","createBook","bookData","body","createBookData","updateBook","updateBookData","addBookReview","reviewData","user","updateBookReview","deleteBook","deleteBookData"],"mappings":"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"}