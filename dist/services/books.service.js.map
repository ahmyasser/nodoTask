{"version":3,"sources":["../../src/services/books.service.ts"],"sourcesContent":["import { CreateBookDto, UpdateBookReviewDto } from '@dtos/books.dto';\nimport { HttpException } from '@exceptions/HttpException';\nimport { Book } from '@interfaces/books.interface';\nimport bookModel from '@models/books.model';\nimport { isEmpty } from '@utils/util';\n\nclass BookService {\n  public books = bookModel;\n\n  public async findAllBook(): Promise<Book[]> {\n    const books: Book[] = await bookModel.find();\n    return books;\n  }\n\n  public async findBookById(bookId: string): Promise<Book> {\n    if (isEmpty(bookId)) throw new HttpException(400, 'BookId is empty');\n\n    const findBook: Book = await bookModel.findOne({ _id: bookId });\n    if (!findBook) throw new HttpException(409, \"Book doesn't exist\");\n\n    return findBook;\n  }\n\n  public async createBook(bookData: CreateBookDto): Promise<Book> {\n    if (isEmpty(bookData)) throw new HttpException(400, 'bookData is empty');\n\n    const createBookData: any = await bookModel.create(bookData);\n\n    return createBookData;\n  }\n\n  public async updateBook(bookId: string, bookData: CreateBookDto): Promise<Book> {\n    if (isEmpty(bookData)) throw new HttpException(400, 'bookData is empty');\n\n    const updateBookById: Book = await bookModel.findByIdAndUpdate(bookId, { bookData });\n    if (!updateBookById) throw new HttpException(409, \"Book doesn't exist\");\n\n    return updateBookById;\n  }\n\n  public async updateBookReview(bookId: string, reviewData: UpdateBookReviewDto): Promise<Book> {\n    if (isEmpty(reviewData)) throw new HttpException(400, 'bookData is empty');\n    console.log(reviewData);\n    const updateBookById: Book = await (await bookModel.findByIdAndUpdate(bookId, { $push: { reviews: reviewData } })).populate('reviews.user');\n    if (!updateBookById) throw new HttpException(409, \"Book doesn't exist\");\n\n    return updateBookById;\n  }\n\n  public async deleteBook(bookId: string): Promise<Book> {\n    const deleteBookById: Book = await bookModel.findByIdAndDelete(bookId);\n    if (!deleteBookById) throw new HttpException(409, \"Book doesn't exist\");\n\n    return deleteBookById;\n  }\n}\n\nexport default BookService;\n"],"names":["BookService","findAllBook","books","bookModel","find","findBookById","bookId","isEmpty","HttpException","findBook","findOne","_id","createBook","bookData","createBookData","create","updateBook","updateBookById","findByIdAndUpdate","updateBookReview","reviewData","console","log","$push","reviews","populate","deleteBook","deleteBookById","findByIdAndDelete"],"mappings":"AAAA;;;;+BAyDA,SAA2B;;aAA3B,QAA2B;;+BAxDG,6BAA2B;mDAEnC,uBAAqB;sBACnB,eAAa;;;;;;AAErC,IAAA,AAAMA,WAAW,GAAjB,MAAMA,WAAW;UAGFC,WAAW,GAAoB;QAC1C,MAAMC,KAAK,GAAW,MAAMC,WAAS,QAAA,CAACC,IAAI,EAAE,AAAC;QAC7C,OAAOF,KAAK,CAAC;IACf;UAEaG,YAAY,CAACC,MAAc,EAAiB;QACvD,IAAIC,IAAAA,KAAO,QAAA,EAACD,MAAM,CAAC,EAAE,MAAM,IAAIE,cAAa,cAAA,CAAC,GAAG,EAAE,iBAAiB,CAAC,CAAC;QAErE,MAAMC,QAAQ,GAAS,MAAMN,WAAS,QAAA,CAACO,OAAO,CAAC;YAAEC,GAAG,EAAEL,MAAM;SAAE,CAAC,AAAC;QAChE,IAAI,CAACG,QAAQ,EAAE,MAAM,IAAID,cAAa,cAAA,CAAC,GAAG,EAAE,oBAAoB,CAAC,CAAC;QAElE,OAAOC,QAAQ,CAAC;IAClB;UAEaG,UAAU,CAACC,QAAuB,EAAiB;QAC9D,IAAIN,IAAAA,KAAO,QAAA,EAACM,QAAQ,CAAC,EAAE,MAAM,IAAIL,cAAa,cAAA,CAAC,GAAG,EAAE,mBAAmB,CAAC,CAAC;QAEzE,MAAMM,cAAc,GAAQ,MAAMX,WAAS,QAAA,CAACY,MAAM,CAACF,QAAQ,CAAC,AAAC;QAE7D,OAAOC,cAAc,CAAC;IACxB;UAEaE,UAAU,CAACV,MAAc,EAAEO,QAAuB,EAAiB;QAC9E,IAAIN,IAAAA,KAAO,QAAA,EAACM,QAAQ,CAAC,EAAE,MAAM,IAAIL,cAAa,cAAA,CAAC,GAAG,EAAE,mBAAmB,CAAC,CAAC;QAEzE,MAAMS,cAAc,GAAS,MAAMd,WAAS,QAAA,CAACe,iBAAiB,CAACZ,MAAM,EAAE;YAAEO,QAAQ;SAAE,CAAC,AAAC;QACrF,IAAI,CAACI,cAAc,EAAE,MAAM,IAAIT,cAAa,cAAA,CAAC,GAAG,EAAE,oBAAoB,CAAC,CAAC;QAExE,OAAOS,cAAc,CAAC;IACxB;UAEaE,gBAAgB,CAACb,MAAc,EAAEc,UAA+B,EAAiB;QAC5F,IAAIb,IAAAA,KAAO,QAAA,EAACa,UAAU,CAAC,EAAE,MAAM,IAAIZ,cAAa,cAAA,CAAC,GAAG,EAAE,mBAAmB,CAAC,CAAC;QAC3Ea,OAAO,CAACC,GAAG,CAACF,UAAU,CAAC,CAAC;QACxB,MAAMH,cAAc,GAAS,MAAM,AAAC,CAAA,MAAMd,WAAS,QAAA,CAACe,iBAAiB,CAACZ,MAAM,EAAE;YAAEiB,KAAK,EAAE;gBAAEC,OAAO,EAAEJ,UAAU;aAAE;SAAE,CAAC,CAAA,CAAEK,QAAQ,CAAC,cAAc,CAAC,AAAC;QAC5I,IAAI,CAACR,cAAc,EAAE,MAAM,IAAIT,cAAa,cAAA,CAAC,GAAG,EAAE,oBAAoB,CAAC,CAAC;QAExE,OAAOS,cAAc,CAAC;IACxB;UAEaS,UAAU,CAACpB,MAAc,EAAiB;QACrD,MAAMqB,cAAc,GAAS,MAAMxB,WAAS,QAAA,CAACyB,iBAAiB,CAACtB,MAAM,CAAC,AAAC;QACvE,IAAI,CAACqB,cAAc,EAAE,MAAM,IAAInB,cAAa,cAAA,CAAC,GAAG,EAAE,oBAAoB,CAAC,CAAC;QAExE,OAAOmB,cAAc,CAAC;IACxB;;QA/CA,KAAOzB,KAAK,GAAGC,WAAS,QAAA,AAAC,CAAA;;CAgD1B;MAED,QAA2B,GAAZH,WAAW"}